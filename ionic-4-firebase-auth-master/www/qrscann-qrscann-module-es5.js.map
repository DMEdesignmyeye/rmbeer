{"version":3,"sources":["webpack:///src/app/qrscann/qrscann-routing.module.ts","webpack:///src/app/qrscann/qrscann.module.ts","webpack:///src/app/qrscann/qrscann.page.ts","webpack:///src/app/qrscann/qrscann.page.html"],"names":["routes","path","component","QrscannPageRoutingModule","forChild","imports","exports","QrscannPageModule","declarations","QrscannPage","barcodeScanner","router","encodeData","barcodeScannerOptions","showTorchButton","showFlipCameraButton","scan","then","barcodeData","navigateByUrl","catch","err","console","log","encode","Encode","TEXT_TYPE","encodedData","scanCode","encodedText","selector","templateUrl","styleUrls"],"mappings":"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","file":"qrscann-qrscann-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QrscannPage } from './qrscann.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrscannPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QrscannPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QrscannPageRoutingModule } from './qrscann-routing.module';\n\nimport { QrscannPage } from './qrscann.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QrscannPageRoutingModule\n  ],\n  declarations: [QrscannPage]\n})\nexport class QrscannPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport {\n  BarcodeScannerOptions,\n  BarcodeScanner\n} from \"@ionic-native/barcode-scanner/ngx\";\n\n@Component({\n  selector: 'app-qrscann',\n  templateUrl: './qrscann.page.html',\n  styleUrls: ['./qrscann.page.scss'],\n})\nexport class QrscannPage implements OnInit { \n  encodeData: any;\n  scannedData: {};\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  Routes: Router;\n\n  constructor(private barcodeScanner: BarcodeScanner, private router: Router) {\n   this.encodeData = \"https://www.FreakyJolly.com\";\n    //Options\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n    //   this.encodeData = \"https://www.rockmebeer.com\";\n  //   //Options\n  //   this.barcodeScannerOptions = {\n  //     showTorchButton: true,\n  //     showFlipCameraButton: true\n  //   };\n  // }\n  ngOnInit() {\n  }\n  \n  // scanCode() {\n  //   this.barcodeScanner.scan().then(barcodeData => {\n  //     alert('Barcode data ' + JSON.stringify(barcodeData));\n  //     this.scannedData = barcodeData;\n  //   }).catch(err => {\n  //     console.log('Error', err);\n  //   });\n  // }\n  scanCode() {\n    this.barcodeScanner\n      .scan()\n      .then(barcodeData => { \n        this.router.navigateByUrl('/beneficiouno');\n\n      })\n      .catch(err => {\n        console.log(\"Error\", err);\n      });\n  }\n  encodedText() {\n    this.barcodeScanner\n      .encode(this.barcodeScanner.Encode.TEXT_TYPE, this.encodeData)\n      .then(\n        encodedData => {\n          console.log(encodedData);\n          this.encodeData = encodedData;\n        },\n        err => {\n          console.log(\"Error occured : \" + err);\n        }\n      );\n      \n    } \n\n   \n}\n","<!-- \n<ion-content>\n  \n  <ion-card> \n    <ion-card-content>      \n        <img src=\"../../assets/img/rmblogo.png\" style=\"height: auto;\"/>\n\n      <img src=\"../../assets/img/qrbg.jpg\" style=\"margin-top: auto;\"/>   <ion-button expand=\"full\" color=\"dark\" (click)=\"scanCode()\">\n          Escanear Beneficio\n        </ion-button>\n        </ion-card-content>\n  </ion-card> \n</ion-content> --> \n<ion-content ion-padding>\n  <h1>Click Button To Scan</h1>\n\n  <ion-button (click)=\"scanCode()\">\n    Scan Code\n  </ion-button>\n\n  <div *ngIf=\"scannedData\">\n    <p>\n      Scanned Code Text : <b>{{ scannedData[\"text\"] }}</b>\n    </p>\n    <p>\n      Scanned Code Format : <b>{{ scannedData[\"format\"] }}</b>\n    </p>\n  </div>\n\n\n  <ion-button (click)=\"encodedText()\">\n    Create QR\n  </ion-button>\n</ion-content>"]}