{"version":3,"sources":["./src/app/qrscann/qrscann-routing.module.ts","./src/app/qrscann/qrscann.module.ts","./src/app/qrscann/qrscann.page.ts","./src/app/qrscann/qrscann.page.html"],"names":[],"mappings":"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","file":"qrscann-qrscann-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QrscannPage } from './qrscann.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrscannPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QrscannPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QrscannPageRoutingModule } from './qrscann-routing.module';\n\nimport { QrscannPage } from './qrscann.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QrscannPageRoutingModule\n  ],\n  declarations: [QrscannPage]\n})\nexport class QrscannPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport {\n  BarcodeScannerOptions,\n  BarcodeScanner\n} from \"@ionic-native/barcode-scanner/ngx\";\n\n@Component({\n  selector: 'app-qrscann',\n  templateUrl: './qrscann.page.html',\n  styleUrls: ['./qrscann.page.scss'],\n})\nexport class QrscannPage implements OnInit { \n  encodeData: any;\n  scannedData: {};\n  barcodeScannerOptions: BarcodeScannerOptions;\n\n  Routes: Router;\n\n  constructor(private barcodeScanner: BarcodeScanner, private router: Router) {\n   this.encodeData = \"https://www.FreakyJolly.com\";\n    //Options\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n    //   this.encodeData = \"https://www.rockmebeer.com\";\n  //   //Options\n  //   this.barcodeScannerOptions = {\n  //     showTorchButton: true,\n  //     showFlipCameraButton: true\n  //   };\n  // }\n  ngOnInit() {\n  }\n  \n  // scanCode() {\n  //   this.barcodeScanner.scan().then(barcodeData => {\n  //     alert('Barcode data ' + JSON.stringify(barcodeData));\n  //     this.scannedData = barcodeData;\n  //   }).catch(err => {\n  //     console.log('Error', err);\n  //   });\n  // }\n  scanCode() {\n    this.barcodeScanner\n      .scan()\n      .then(barcodeData => { \n        this.router.navigateByUrl('/beneficiouno');\n\n      })\n      .catch(err => {\n        console.log(\"Error\", err);\n      });\n  }\n  encodedText() {\n    this.barcodeScanner\n      .encode(this.barcodeScanner.Encode.TEXT_TYPE, this.encodeData)\n      .then(\n        encodedData => {\n          console.log(encodedData);\n          this.encodeData = encodedData;\n        },\n        err => {\n          console.log(\"Error occured : \" + err);\n        }\n      );\n      \n    } \n\n   \n}\n","<!-- \n<ion-content>\n  \n  <ion-card> \n    <ion-card-content>      \n        <img src=\"../../assets/img/rmblogo.png\" style=\"height: auto;\"/>\n\n      <img src=\"../../assets/img/qrbg.jpg\" style=\"margin-top: auto;\"/>   <ion-button expand=\"full\" color=\"dark\" (click)=\"scanCode()\">\n          Escanear Beneficio\n        </ion-button>\n        </ion-card-content>\n  </ion-card> \n</ion-content> --> \n<ion-content ion-padding>\n  <h1>Click Button To Scan</h1>\n\n  <ion-button (click)=\"scanCode()\">\n    Scan Code\n  </ion-button>\n\n  <div *ngIf=\"scannedData\">\n    <p>\n      Scanned Code Text : <b>{{ scannedData[\"text\"] }}</b>\n    </p>\n    <p>\n      Scanned Code Format : <b>{{ scannedData[\"format\"] }}</b>\n    </p>\n  </div>\n\n\n  <ion-button (click)=\"encodedText()\">\n    Create QR\n  </ion-button>\n</ion-content>"],"sourceRoot":"webpack:///"}